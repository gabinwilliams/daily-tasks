name: iOS CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test iOS App
    runs-on: macos-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
      
      - name: Cache CocoaPods
        uses: actions/cache@v3
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      
      - name: Install CocoaPods
        working-directory: ./ios
        run: |
          gem install cocoapods
          pod install
      
      - name: Run Tests
        working-directory: ./ios
        run: |
          xcodebuild test \
            -workspace DailyTasks.xcworkspace \
            -scheme DailyTasks \
            -destination 'platform=iOS Simulator,name=iPhone 14,OS=latest' \
            -enableCodeCoverage YES \
            | xcpretty && exit ${PIPESTATUS[0]}
      
      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: test-results
          path: ios/build/reports
      
      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          directory: ios/build/reports/
          flags: ios
          name: codecov-ios
          fail_ci_if_error: true

  build:
    name: Build iOS App
    needs: test
    runs-on: macos-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
      
      - name: Install CocoaPods
        working-directory: ./ios
        run: |
          gem install cocoapods
          pod install
      
      - name: Set Build Number
        working-directory: ./ios
        run: |
          buildNumber=$(($GITHUB_RUN_NUMBER + 1000))
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $buildNumber" DailyTasks/Info.plist
      
      - name: Build App
        working-directory: ./ios
        run: |
          xcodebuild build \
            -workspace DailyTasks.xcworkspace \
            -scheme DailyTasks \
            -configuration Release \
            -archivePath build/DailyTasks.xcarchive \
            -sdk iphoneos \
            archive
      
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-build
          path: ios/build/DailyTasks.xcarchive

  deploy:
    name: Deploy to TestFlight
    needs: build
    runs-on: macos-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: app-build
          path: ios/build
      
      - name: Install Apple Certificate
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # Create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security set-keychain-settings -t 3600 -l ~/Library/Keychains/build.keychain
          
          # Import certificate to keychain
          echo $BUILD_CERTIFICATE_BASE64 | base64 --decode > certificate.p12
          security import certificate.p12 -k build.keychain -P "$P12_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" build.keychain
      
      - name: Install Provisioning Profile
        env:
          PROVISIONING_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo $PROVISIONING_PROFILE_BASE64 | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision
      
      - name: Upload to TestFlight
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_PRIVATE_KEY: ${{ secrets.ASC_PRIVATE_KEY }}
        working-directory: ./ios
        run: |
          xcrun altool --upload-app -f build/DailyTasks.xcarchive/Products/Applications/DailyTasks.ipa \
            --type ios \
            --apiKey "$ASC_KEY_ID" \
            --apiIssuer "$ASC_ISSUER_ID" \
            --asc-provider "$ASC_ISSUER_ID" 